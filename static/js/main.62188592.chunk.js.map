{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","funcAllDel","setState","input","members","count","funcAdd","name","state","val","funcDel","a","i","list","splice","funcChange","e","target","value","funcEnter","keyCode","funcCountChange","cnt","String","result","replace","Number","funcCalc","rm","limit","length","lml","alc","lll","ch","Math","floor","random","chk","j","sort","b","console","log","this","Container","fluid","Row","className","Col","xs","lg","InputGroup","Prepend","Text","FormControl","aria-label","aria-describedby","id","onChange","onKeyDown","Append","Button","variant","onClick","Array","isArray","map","v","ListGroup","defaultActiveKey","Item","action","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62188592.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Col, Container, FormControl, InputGroup, ListGroup, Row } from 'react-bootstrap';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      input : '',\n      members:[],\n      count: ''\n    }\n  }\n\n  funcAllDel = () => {\n    this.setState({\n      input : '',\n      members:[],\n      count: ''\n    });\n  }\n\n  funcAdd = () => {\n    const name = this.state.input;\n    this.state.members = [\n      ...this.state.members,\n      {\n        name : name,\n        val : 0\n      } \n    ]\n    this.setState({\n      input : ''\n    })\n  }\n\n  funcDel = (a,i) => {\n    let list = this.state.members\n    list.splice(i, 1);\n    this.setState({\n      members: list\n    })\n  }\n\n  funcChange = (e) =>{\n    this.setState({\n      input : e.target.value\n    });\n  }\n  \n  funcEnter = (e) => {\n    const name = e.target.value;\n    if(e.keyCode === 13){\n      this.state.members = [\n        ...this.state.members,\n        {\n          name : name,\n          val : 0\n        }\n      ]\n      this.setState({\n        input : ''\n      })\n    }\n    if(!e.keyCode === 13){\n      this.setState({\n        input : e.target.value\n      });\n    }\n  }\n\n  funcCountChange = (e) =>{\n    let cnt = String(e.target.value);\n    const regex = /[^0-9]/g;\t\t\t\t// 숫자가 아닌 문자열을 선택하는 정규식\n    const result = cnt.replace(regex, \"\");\n    cnt = Number(result);\n    \n    this.setState({\n      count : cnt\n    });\n  }\n\n\n  funcCalc = () => {\n    let members = this.state.members;\n    let count = this.state.count;\n    let rm = [];\n    // List<String> members, int count;\n\t\t// Map<String, Integer> rm = new HashMap<String, Integer>();\n\n\t\tlet limit = (members.length / count);\n    let lml = []\n\t\tfor(let i=0; i<count; i++){\n      lml[i] = 0;\n    }\n\n\t\t\n\t\tlet alc = 0;\n\t\tlet lll = [];\n\t\tlet ch = true;\n\t\tfor (let i = 0; i < members.length; i++) {\n\t\t\talc = Number(Math.floor(Math.random() * count + 1));\n\t\t\tif (lml[alc - 1] === limit) {\n\t\t\t\tif (rm.length === members.length) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\tlet chk = 0;\n\t\t\t\t\tfor (let j = 0; j < lml.length; j++) {\n\t\t\t\t\t\tif (lml[j] === limit) {\n\t\t\t\t\t\t\tchk++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (chk === lml.length) {\n\t\t\t\t\t\tif ((members.length - rm.length) > 0) {\n\t\t\t\t\t\t\talc = Number(Math.floor(Math.random() * count + 1));\n\t\t\t\t\t\t\tif (lll[alc - 1] < 1) {\n\t\t\t\t\t\t\t\tch = false;\n\t\t\t\t\t\t\t\tlll[alc - 1] = lll[alc - 1] + 1;\n                rm = [\n                  ...rm,\n                  { name: members[i].name, val : alc}\n                ]\n\t\t\t\t\t\t\t\t// rm.put(members.get(i), alc);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ti--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (ch) {\n\t\t\t\tlml[alc - 1] = lml[alc - 1] + 1;\n\t\t\t\t// rm.put(members.get(i), alc);\n        rm = [\n          ...rm,\n          { name: members[i].name, val : alc}\n        ]\n\t\t\t}\n\t\t}\n    rm.sort(function(a,b){\n      return a.val - b.val;\n    });\n    this.setState({\n      members : rm\n    })\n\t\t// return rm;\n\t}\n\n  render() {\n\n    console.log(this.state)\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-md-center\">\n          <Col xs lg=\"6\">\n            <h1>Team Maker V.1.0</h1>\n            <InputGroup className=\"mb-3\">\n            <InputGroup.Prepend>\n              <InputGroup.Text>이름 | 개수</InputGroup.Text>\n            </InputGroup.Prepend>\n              <FormControl\n                aria-label=\"Recipient's username\"\n                aria-describedby=\"basic-addon2\"\n                id = \"name\"\n                value = {this.state && this.state.input}\n                onChange = {(e)=>{this.funcChange(e)}}\n                onKeyDown = {(e)=>{this.funcEnter(e)}}\n              />\n              <FormControl \n                aria-label=\"Recipient's username\"\n                aria-describedby=\"basic-addon2\"\n                id = \"count\"\n                value = {(this.state.count===0)?'':this.state && this.state.count}\n                onChange = {(e)=>{this.funcCountChange(e)}}\n                // onKeyDown = {(e)=>{this.funcCountKey(e)}}\n              />\n              <InputGroup.Append>\n                <Button variant=\"outline-secondary\" onClick = {()=>{this.funcAdd()}}>등록</Button>\n                <Button variant=\"danger\" onClick = {()=>{this.funcAllDel()}}>Reset</Button>\n                <Button onClick = {()=>{this.funcCalc()}}>계산</Button>\n              </InputGroup.Append>\n            </InputGroup>\n\n          </Col>\n        </Row>\n        <Row>\n        <Col xs lg=\"6\">\n        {\n          this.state.members!=null && Array.isArray(this.state.members) && this.state.members.length > 0\n          ?\n          this.state.members.map((a,i,v)=>{\n            return(\n              <ListGroup key ={i} defaultActiveKey=\"#link1\">\n              <ListGroup.Item action onClick={()=>{this.funcDel(a, i)}}>\n              {a.name},{a.val}\n              </ListGroup.Item>\n              </ListGroup>\n            );\n          })\n          :\n          ''\n        }\n        </Col>\n        </Row>\n\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}