{"version":3,"sources":["components/SearchPage.jsx","components/ListPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchPage","this","props","input","count","funcChange","funcEnter","funcCountChange","funcAdd","funcAllDel","funcCalc","Row","className","Col","xs","lg","InputGroup","Prepend","Text","FormControl","aria-label","aria-describedby","id","value","onChange","e","onKeyDown","Append","Button","variant","onClick","Component","ListPage","members","funcDel","Array","isArray","length","map","a","i","v","ListGroup","defaultActiveKey","Item","action","name","val","App","setState","state","list","splice","target","keyCode","cnt","String","result","replace","Number","window","alert","rm","lml","lll","alc","ch","limit","Math","floor","random","chk","j","sort","b","round","Container","fluid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPA0DeA,E,4JApDX,WAAS,IAAD,EAWFC,KAAKC,MARPC,EAHI,EAGJA,MACAC,EAJI,EAIJA,MACAC,EALI,EAKJA,WACAC,EANI,EAMJA,UACAC,EAPI,EAOJA,gBACAC,EARI,EAQJA,QACAC,EATI,EASJA,WACAC,EAVI,EAUJA,SAIA,OACA,cAACC,EAAA,EAAD,CAAKC,UAAU,4BAAf,SACE,eAACC,EAAA,EAAD,CAAKC,IAAE,EAACC,GAAG,IAAX,UACE,kDACA,eAACC,EAAA,EAAD,CAAYJ,UAAU,OAAtB,UACA,cAACI,EAAA,EAAWC,QAAZ,UACE,cAACD,EAAA,EAAWE,KAAZ,4CAEA,cAACC,EAAA,EAAD,CACEC,aAAW,uBACXC,mBAAiB,eACjBC,GAAK,OACLC,MAAgB,MAAPpB,EAAYA,EAAM,GAC3BqB,SAAY,SAACC,GAAKpB,EAAWoB,IAC7BC,UAAa,SAACD,GAAKnB,EAAUmB,MAE/B,cAACN,EAAA,EAAD,CACEC,aAAW,uBACXC,mBAAiB,eACjBC,GAAK,QACLC,MAAiB,MAAPnB,GAAuB,IAARA,EAAW,GAAIA,EACxCoB,SAAY,SAACC,GAAKlB,EAAgBkB,MAGpC,eAACT,EAAA,EAAWW,OAAZ,WACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,oBAAoBC,QAAW,WAAKtB,KAApD,0BACA,cAACoB,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAAW,WAAKrB,KAAzC,mBACA,cAACmB,EAAA,EAAD,CAAQE,QAAW,WAAKpB,KAAxB,yC,GA3CSqB,a,QCiCVC,E,4JAhCX,WAAS,IAAD,EAKA/B,KAAKC,MAFL+B,EAHA,EAGAA,QACAC,EAJA,EAIAA,QAGJ,OACA,cAACvB,EAAA,EAAD,CAAKC,UAAU,4BAAf,SACI,cAACC,EAAA,EAAD,CAAKC,IAAE,EAACC,GAAG,IAAX,SAES,MAATkB,GAAiBE,MAAMC,QAAQH,IAAYA,EAAQI,OAAS,EAE5DJ,EAAQK,KAAI,SAACC,EAAEC,EAAEC,GACb,OACA,cAACC,EAAA,EAAD,CAAoBC,iBAAiB,SAArC,SACI,eAACD,EAAA,EAAUE,KAAX,CAAgBC,QAAM,EAACf,QAAS,WAAKI,EAAQK,EAAGC,IAAhD,UACKD,EAAEO,KADP,IACcP,EAAEQ,QAFHP,MAQrB,W,GAzBWT,aCkPRiB,E,kDA/Ob,WAAY9C,GAAO,IAAD,8BAChB,cAAMA,IAQRO,WAAa,WACX,EAAKwC,SAAS,CACZ9C,MAAQ,GACR8B,QAAQ,GACR7B,MAAO,MAbO,EAkBlBI,QAAU,WACR,IAAMsC,EAAO,EAAKI,MAAM/C,MACxB,EAAK+C,MAAMjB,QAAX,sBACK,EAAKiB,MAAMjB,SADhB,CAEE,CACEa,KAAOA,EACPC,IAAM,KAGV,EAAKE,SAAS,CACZ9C,MAAQ,MA5BM,EAgClB+B,QAAU,SAACK,EAAEC,GACX,IAAIW,EAAO,EAAKD,MAAMjB,QACtBkB,EAAKC,OAAOZ,EAAG,GACf,EAAKS,SAAS,CACZhB,QAASkB,KApCK,EAwClB9C,WAAa,SAACoB,GACZ,EAAKwB,SAAS,CACZ9C,MAAQsB,EAAE4B,OAAO9B,SA1CH,EA8ClBjB,UAAY,SAACmB,GACX,IAAMqB,EAAOrB,EAAE4B,OAAO9B,MACL,KAAdE,EAAE6B,UACH,EAAKJ,MAAMjB,QAAX,sBACK,EAAKiB,MAAMjB,SADhB,CAEE,CACEa,KAAOA,EACPC,IAAM,KAGV,EAAKE,SAAS,CACZ9C,MAAQ,MAGM,MAAdsB,EAAE6B,SACJ,EAAKL,SAAS,CACZ9C,MAAQsB,EAAE4B,OAAO9B,SA9DL,EAmElBhB,gBAAkB,SAACkB,GACjB,IAAI8B,EAAMC,OAAO/B,EAAE4B,OAAO9B,OAEpBkC,EAASF,EAAIG,QADL,UACoB,IAClCH,EAAMI,OAAOF,GAEb,EAAKR,SAAS,CACZ7C,MAAQmD,KA1EM,EA+ElB7C,SAAW,WACT,IAAIuB,EAAU,EAAKiB,MAAMjB,QACrB7B,EAAQ,EAAK8C,MAAM9C,MACvB,GAAG6B,EAAQI,OAASjC,EAElB,OADAwD,OAAOC,MAAM,iFACN,EAGT,IAAIC,EAAK,GACLC,EAAM,GACNC,EAAM,GACNC,EAAM,EACRC,GAAK,EACLC,EAASlC,EAAQI,OAASjC,EAC5B,GAAG+D,EAAQ,GAAK,EAAE,CAChB,IAAI,IAAI3B,EAAE,EAAGA,EAAEpC,EAAOoC,IACpBuB,EAAIvB,GAAK,EACTwB,EAAIxB,GAAK,EAGX,IAAK,IAAIA,EAAI,EAAGA,EAAIP,EAAQI,OAAQG,IAAK,CAEvC,GAAIuB,GADJE,EAAMG,KAAKC,MAAMD,KAAKE,SAAWlE,EAAQ,IAC3B,KAAO+D,EAAO,CAC1B,GAAIL,EAAGzB,SAAWJ,EAAQI,OACxB,OAAO,EAGP,IADA,IAAIkC,EAAM,EACDC,EAAI,EAAGA,EAAIT,EAAI1B,OAAQmC,IAC1BT,EAAIS,KAAOL,GACbI,IAGJ,GAAIA,IAAQR,EAAI1B,OAgBT,CACLG,IACA,SAjBA,GAAKP,EAAQI,OAASyB,EAAGzB,OAAU,EAAG,CAEpC,KAAI2B,GADJC,EAAMG,KAAKC,MAAMD,KAAKE,SAAWlE,EAAQ,IAC3B,GAAK,GAQZ,CACLoC,IACA,SATA0B,GAAK,EACLF,EAAIC,EAAM,GAAKD,EAAIC,EAAM,GAAK,EAC9BH,EAAE,sBACGA,GADH,CAEA,CAAEhB,KAAMb,EAAQO,GAAGM,KAAMC,IAAMkB,MAcvCC,IACFH,EAAIE,EAAM,GAAKF,EAAIE,EAAM,GAAK,EAE9BH,EAAE,sBACGA,GADH,CAEA,CAAEhB,KAAMb,EAAQO,GAAGM,KAAMC,IAAMkB,MAIrCH,EAAGW,MAAK,SAASlC,EAAEmC,GACjB,OAAOnC,EAAEQ,IAAM2B,EAAE3B,WAEd,CACRoB,EAAQC,KAAKO,MAAM1C,EAAQI,OAASjC,GACnB6B,EAAQI,OAKtB8B,EAAQlC,EAAQI,OAASjC,EAC5BA,EAAQ6B,EAAQI,OAAS8B,EACtB,IAAI,IAAI3B,EAAE,EAAGA,EAAEpC,EAAOoC,IACpBuB,EAAIvB,GAAK,EACTwB,EAAIxB,GAAK,EAGX,IAAK,IAAIA,EAAI,EAAGA,EAAIP,EAAQI,OAAQG,IAAK,CAEvC,GAAIuB,GADJE,EAAMG,KAAKC,MAAMD,KAAKE,SAAWlE,EAAQ,IAC3B,KAAO+D,EAAO,CAC1B,GAAIL,EAAGzB,SAAWJ,EAAQI,OACxB,OAAO,EAGP,IADA,IAAIkC,EAAM,EACDC,EAAI,EAAGA,EAAIT,EAAI1B,OAAQmC,IAC1BT,EAAIS,KAAOL,GACbI,IAGJ,GAAIA,IAAQR,EAAI1B,OAgBT,CACLG,IACA,SAjBA,GAAKP,EAAQI,OAASyB,EAAGzB,OAAU,EAAG,CAEpC,KAAI2B,GADJC,EAAMG,KAAKC,MAAMD,KAAKE,SAAWlE,EAAQ,IAC3B,GAAK,GAQZ,CACLoC,IACA,SATA0B,GAAK,EACLF,EAAIC,EAAM,GAAKD,EAAIC,EAAM,GAAK,EAC9BH,EAAE,sBACGA,GADH,CAEA,CAAEhB,KAAMb,EAAQO,GAAGM,KAAMC,IAAMkB,MAcvCC,IACFH,EAAIE,EAAM,GAAKF,EAAIE,EAAM,GAAK,EAE9BH,EAAE,sBACGA,GADH,CAEA,CAAEhB,KAAMb,EAAQO,GAAGM,KAAMC,IAAMkB,MAIrCH,EAAGW,MAAK,SAASlC,EAAEmC,GACjB,OAAOnC,EAAEQ,IAAM2B,EAAE3B,OAKrB,EAAKE,SAAS,CACZhB,QAAU6B,KA/MZ,EAAKZ,MAAQ,CACX/C,MAAQ,GACR8B,QAAQ,GACR7B,MAAO,IALO,E,0CAqNlB,WAGE,OACE,eAACwE,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,cAAC,EAAD,CACE1E,MAASF,KAAKiD,MAAM/C,MACpBC,MAASH,KAAKiD,MAAM9C,MACpBC,WAAcJ,KAAKI,WACnBC,UAAaL,KAAKK,UAClBC,gBAAmBN,KAAKM,gBACxBC,QAAWP,KAAKO,QAChBC,WAAcR,KAAKQ,WACnBC,SAAYT,KAAKS,WAGnB,cAAC,EAAD,CACEuB,QAAUhC,KAAKiD,MAAMjB,QACrBC,QAAWjC,KAAKiC,iB,GAzORH,aCQH+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0614b901.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Col, FormControl, InputGroup, Row } from 'react-bootstrap';\r\n\r\n\r\nclass SearchPage extends Component{\r\n\r\n    render(){\r\n\r\n      const {\r\n        input,\r\n        count,\r\n        funcChange,\r\n        funcEnter,\r\n        funcCountChange,\r\n        funcAdd,\r\n        funcAllDel,\r\n        funcCalc\r\n      } = this.props\r\n        // console.log(this.props);\r\n\r\n        return(\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs lg=\"6\">\r\n            <h1>Team Maker V.1.0</h1>\r\n            <InputGroup className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>이름 | 개수</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n              <FormControl\r\n                aria-label=\"Recipient's username\"\r\n                aria-describedby=\"basic-addon2\"\r\n                id = \"name\"\r\n                value = {input!=null?input:''}\r\n                onChange = {(e)=>{funcChange(e)}}\r\n                onKeyDown = {(e)=>{funcEnter(e)}}\r\n              />\r\n              <FormControl \r\n                aria-label=\"Recipient's username\"\r\n                aria-describedby=\"basic-addon2\"\r\n                id = \"count\"\r\n                value = {(count!=null && count===0)?'': count}\r\n                onChange = {(e)=>{funcCountChange(e)}}\r\n                // onKeyDown = {(e)=>{this.funcCountKey(e)}}\r\n              />\r\n              <InputGroup.Append>\r\n                <Button variant=\"outline-secondary\" onClick = {()=>{funcAdd()}}>등록</Button>\r\n                <Button variant=\"danger\" onClick = {()=>{funcAllDel()}}>Reset</Button>\r\n                <Button onClick = {()=>{funcCalc()}}>계산</Button>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n\r\n          </Col>\r\n        </Row>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default SearchPage;","import { Component } from \"react\";\r\nimport { Col, ListGroup, Row } from \"react-bootstrap\";\r\n\r\nclass ListPage extends Component{\r\n\r\n    render(){\r\n\r\n        const {\r\n            members,\r\n            funcDel\r\n        } = this.props;\r\n\r\n        return(\r\n        <Row className=\"justify-content-md-center\">\r\n            <Col xs lg=\"6\">\r\n            {\r\n            members!=null && Array.isArray(members) && members.length > 0\r\n            ?\r\n            members.map((a,i,v)=>{\r\n                return(\r\n                <ListGroup key ={i} defaultActiveKey=\"#link1\">\r\n                    <ListGroup.Item action onClick={()=>{funcDel(a, i)}}>\r\n                        {a.name},{a.val}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n                );\r\n            })\r\n            :\r\n            ''\r\n            }\r\n            </Col>\r\n        </Row>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ListPage;","import React, { Component } from 'react';\nimport { Container } from 'react-bootstrap';\nimport SearchPage from './components/SearchPage';\nimport ListPage from './components/ListPage';\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      input : '',\n      members:[],\n      count: ''\n    }\n  }\n\n  funcAllDel = () => {\n    this.setState({\n      input : '',\n      members:[],\n      count: ''\n    });\n    \n  }\n\n  funcAdd = () => {\n    const name = this.state.input;\n    this.state.members = [\n      ...this.state.members,\n      {\n        name : name,\n        val : 0\n      } \n    ]\n    this.setState({\n      input : ''\n    })\n  }\n\n  funcDel = (a,i) => {\n    let list = this.state.members\n    list.splice(i, 1);\n    this.setState({\n      members: list\n    })\n  }\n\n  funcChange = (e) =>{\n    this.setState({\n      input : e.target.value\n    });\n  }\n  \n  funcEnter = (e) => {\n    const name = e.target.value;\n    if(e.keyCode === 13){\n      this.state.members = [\n        ...this.state.members,\n        {\n          name : name,\n          val : 0\n        }\n      ]\n      this.setState({\n        input : ''\n      })\n    }\n    if(!e.keyCode === 13){\n      this.setState({\n        input : e.target.value\n      });\n    }\n  }\n\n  funcCountChange = (e) =>{\n    let cnt = String(e.target.value);\n    const regex = /[^0-9]/g;\t\t\t\t// 숫자가 아닌 문자열을 선택하는 정규식\n    const result = cnt.replace(regex, \"\");\n    cnt = Number(result);\n    \n    this.setState({\n      count : cnt\n    });\n  }\n\n\n  funcCalc = () => {\n    let members = this.state.members;\n    let count = this.state.count;\n    if(members.length < count){\n      window.alert('사람보다 조 개수가 많습니다.');\n      return false;\n    }\n    \n    let rm = [];\n    let lml = []\n    let lll = [];\n    let alc = 0;\n\t\tlet ch = true;\n\t\tlet limit = (members.length / count);\n    if(limit % 2 == 0){\n      for(let i=0; i<count; i++){\n        lml[i] = 0;\n        lll[i] = 0;\n      }\n  \n      for (let i = 0; i < members.length; i++) {\n        alc = Math.floor(Math.random() * count + 1);\n        if (lml[alc - 1] === limit) {\n          if (rm.length === members.length) {\n            return false;\n          } else {\n            let chk = 0;\n            for (let j = 0; j < lml.length; j++) {\n              if (lml[j] === limit) {\n                chk++;\n              }\n            }\n            if (chk === lml.length) {\n              if ((members.length - rm.length) > 0) {\n                alc = Math.floor(Math.random() * count + 1);\n                if (lll[alc - 1] < 1) {\n                  ch = false;\n                  lll[alc - 1] = lll[alc - 1] + 1;\n                  rm = [\n                    ...rm,\n                    { name: members[i].name, val : alc}\n                  ]\n                  // rm.put(members.get(i), alc);\n                } else {\n                  i--;\n                  continue;\n                }\n              }\n            } else {\n              i--;\n              continue;\n            }\n          }\n        }\n        if (ch) {\n          lml[alc - 1] = lml[alc - 1] + 1;\n          // rm.put(members.get(i), alc);\n          rm = [\n            ...rm,\n            { name: members[i].name, val : alc}\n          ]\n        }\n      }\n      rm.sort(function(a,b){\n        return a.val - b.val;\n      });\n    } else {\n\t\t\tlimit = Math.round(members.length / count);\n      let newcnt = (members.length % count)\n      // let newcnt = (members.length / count).toFixed(1);\n      // newcnt = String(newcnt).split('.')\n      // newcnt = Number(newcnt[1]);\n\t\t\t// count = newcnt == 0 ? count : newcnt;\n      limit = members.length - count;\n\t\t\tcount = members.length / limit;\n      for(let i=0; i<count; i++){\n        lml[i] = 0;\n        lll[i] = 0;\n      }\n  \n      for (let i = 0; i < members.length; i++) {\n        alc = Math.floor(Math.random() * count + 1);\n        if (lml[alc - 1] === limit) {\n          if (rm.length === members.length) {\n            return false;\n          } else {\n            let chk = 0;\n            for (let j = 0; j < lml.length; j++) {\n              if (lml[j] === limit) {\n                chk++;\n              }\n            }\n            if (chk === lml.length) {\n              if ((members.length - rm.length) > 0) {\n                alc = Math.floor(Math.random() * count + 1);\n                if (lll[alc - 1] < 1) {\n                  ch = false;\n                  lll[alc - 1] = lll[alc - 1] + 1;\n                  rm = [\n                    ...rm,\n                    { name: members[i].name, val : alc}\n                  ]\n                  // rm.put(members.get(i), alc);\n                } else {\n                  i--;\n                  continue;\n                }\n              }\n            } else {\n              i--;\n              continue;\n            }\n          }\n        }\n        if (ch) {\n          lml[alc - 1] = lml[alc - 1] + 1;\n          // rm.put(members.get(i), alc);\n          rm = [\n            ...rm,\n            { name: members[i].name, val : alc}\n          ]\n        }\n      }\n      rm.sort(function(a,b){\n        return a.val - b.val;\n      });\n    }\n    \n\t\t\n    this.setState({\n      members : rm\n    })\n\t}\n\n  render() {\n\n    // console.log(this.state)\n    return (\n      <Container fluid>\n        <SearchPage \n          input = {this.state.input}\n          count = {this.state.count}\n          funcChange = {this.funcChange}\n          funcEnter = {this.funcEnter}\n          funcCountChange = {this.funcCountChange}\n          funcAdd = {this.funcAdd}\n          funcAllDel = {this.funcAllDel}\n          funcCalc = {this.funcCalc}\n        />\n        \n        <ListPage \n          members= {this.state.members}\n          funcDel = {this.funcDel}\n        />\n\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}